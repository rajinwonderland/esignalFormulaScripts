/*********************************************************
TRO_Dynamic_FibsSR  11:16 AM 2/19/2007 Plots Dynamic SR with Fibs  

Programmer:  Avery T. Horton, Jr.  aka TheRumpledOne,  

DONATIONS AND GIFTS ACCEPTED 

P O BOX 43575, TUCSON, AZ 85733 

please include this and/or any other comment blocks and a 
description of any changes you make.

Copyright 2007, All Rights Reserved. Code may be modified for 
personal use only. No portion of this code can be sold or
otherwise redistributed without the express written consent of
the author, Avery T. Horton, Jr.


ATTN ESIGNAL: I DID NOT POST THIS CODE ON YOUR FORUM
              I AM NOT RESPONSIBLE FOR ANY ESIGNAL FORUM RULE VIOLATIONS.

****/


var Dynamic_M 	   	= 0;
var Dynamic_R 	   	= 0;
var Dynamic_S 	        = 0;
var OldDynamic_R 	= 0;
var OldDynamic_S 	= 0;
var PrevDynamic_R 	= 0;
var PrevDynamic_S 	= 0;

var Mid = null;

function preMain() {


    setShowTitleParameters( false );
    setPriceStudy(true);
    setStudyTitle("TRO_Dynamic_FibsSR with text");

    setCursorLabelName("Dyn Res", 0);
    setCursorLabelName("FIB L5", 1);
    setCursorLabelName("FIB L4", 2);
    setCursorLabelName("FIB L3", 3);
    setCursorLabelName("FIB L2", 4);
    setCursorLabelName("FIB L1", 5);
    setCursorLabelName("Dyn Sup", 6);


    setDefaultBarThickness(2,0);
    setDefaultBarThickness(2,1);
    setDefaultBarThickness(2,2);
    setDefaultBarThickness(2,3);
    setDefaultBarThickness(2,4);
    setDefaultBarThickness(2,5);
    setDefaultBarThickness(2,6);

    setPlotType(PLOTTYPE_FLATLINES,0);            
    setPlotType(PLOTTYPE_FLATLINES,1);
    setPlotType(PLOTTYPE_FLATLINES,2); 
    setPlotType(PLOTTYPE_FLATLINES,3); 
    setPlotType(PLOTTYPE_FLATLINES,4); 
    setPlotType(PLOTTYPE_FLATLINES,5); 
    setPlotType(PLOTTYPE_FLATLINES,6); 


nDrawn = 0;
            
}

// askForInput();



    var iDecimals = new FunctionParameter("iDecimals", FunctionParameter.NUMBER);
	iDecimals.setDefault( 4 ); 

    var iNumBars = new FunctionParameter("iNumBars", FunctionParameter.NUMBER);
	iNumBars.setDefault( 5 ); 

    var iLevel1 = new FunctionParameter("iLevel1", FunctionParameter.NUMBER);
	iLevel1.setDefault( .24 ); 


    var iLevel2 = new FunctionParameter("iLevel2", FunctionParameter.NUMBER);
	iLevel2.setDefault( .382 );

    var iLevel3 = new FunctionParameter("iLevel3", FunctionParameter.NUMBER);
	iLevel3.setDefault( .500 ); 


    var iLevel4 = new FunctionParameter("iLevel4", FunctionParameter.NUMBER);
	iLevel4.setDefault( .618 ); 


    var iLevel5 = new FunctionParameter("iLevel5", FunctionParameter.NUMBER);
	iLevel5.setDefault( .76 ); 


    var iColorTop = new FunctionParameter("iColorTop", FunctionParameter.COLOR);
        iColorTop.setDefault( Color.green );

    var iColorFib = new FunctionParameter("iColorFib", FunctionParameter.COLOR);
        iColorFib.setDefault( Color.black );

    var iColorBottom = new FunctionParameter("iColorBottom", FunctionParameter.COLOR);
        iColorBottom.setDefault( Color.red );




function main(iColorTop ,iColorFib, iColorBottom, iDecimals, iNumBars, iLevel1, iLevel2,iLevel3,iLevel4,iLevel5 ) {
 
  // initialize upon first loading formula
    if(getBarState() == BARSTATE_ALLBARS) {
        drawTextPixel(5, 75, "TRO_DynamicFibsSR @URL=EFS:editParameters", Color.white, Color.green, 
            drawTextRelative.RELATIVETOLEFT|Text.RELATIVETOBOTTOM|Text.ONTOP|Text.BOLD|Text.BUTTON, 
            "Comic Sans MS", 13, "UpExp"); 
        vDate = new Date();
        vInterval = getInterval();
        vSymbol = getSymbol().toUpperCase();
    
        // for RTH, eg, to convert, ES Z2 to ES Z2=2
        //var rootSymbol = vSymbol.substring(0,3);
        //if (rootSymbol == "ES " || rootSymbol == "NQ ") 
        //    if ( vSymbol.indexOf("=2") == -1 ) vSymbol += "=2";
    
        vSymbol += ",D";
        return null;
    }


setBarFgColor(iColorTop, 0);
setBarFgColor(iColorFib, 1);
setBarFgColor(iColorFib, 2);
setBarFgColor(Color.navy, 3);
setBarFgColor(iColorFib, 4);
setBarFgColor(iColorFib, 5);
setBarFgColor(iColorBottom, 6);




 	if ( PrevDynamic_R==null)  PrevDynamic_R = 0;

 	if ( PrevDynamic_S==null)  PrevDynamic_S = 0;


    if( getBarState() == BARSTATE_NEWBAR && getDay() != getDay(-1) ) {
   	 Dynamic_R =    high() ;  // dynamic Resistance
   	 Dynamic_S =    low() ;  // dynamic Suport

         PrevDynamic_R = high() ;
         PrevDynamic_S = low() ;
           xShEntry = high()  ; 
           xLgEntry = low() ; 
    }



if ( Dynamic_R != PrevDynamic_R ) {
	OldDynamic_R = PrevDynamic_R ; 
	}
		
if ( Dynamic_S != PrevDynamic_S ) {
	OldDynamic_S  = PrevDynamic_S ; 
	}
	
OldDynamic_R = PrevDynamic_R ;
OldDynamic_S = PrevDynamic_S ;

PrevDynamic_R = Dynamic_R ;
PrevDynamic_S = Dynamic_S ;



var xHH = highest( iNumBars , high() ) ;  // dynamic Resistance
var xLL = lowest( iNumBars , low() ) ;  // dynamic Suport

Dynamic_R =   rnd(xHH, iDecimals); // dynamic Resistance 
Dynamic_S =   rnd(xLL, iDecimals); // dynamic Suport



   
if ( Dynamic_R != high(0) && Dynamic_R < PrevDynamic_R ) {
	 if ( PrevDynamic_R != 0 ) {
		Dynamic_R = PrevDynamic_R;
         }
}
	

if ( Dynamic_S != low(0) && Dynamic_S > PrevDynamic_S ) {		
	if ( PrevDynamic_S != 0 ) {
		Dynamic_S = PrevDynamic_S;
        }
}



//var xHH = highest( iNumBars, high() ) ;  
//var xLL = lowest( iNumBars, low() ) ;

//var  xHHD  =  rnd(xHH  , iDecimals); 
//var  xLLD  =  rnd(xLL  , iDecimals); 


var  xHHD  =  rnd(Dynamic_R  , iDecimals); 
var  xLLD  =  rnd(Dynamic_S  , iDecimals); 

var xFibRange = xHHD - xLLD ;


var vFib1	=  ( iLevel1 * xFibRange ) + xLLD   ; 
var vFib2	=  ( iLevel2 * xFibRange ) + xLLD   ;
var vFib3	=  ( iLevel3 * xFibRange ) + xLLD   ;
var vFib4	=  ( iLevel4 * xFibRange ) + xLLD   ;
var vFib5	=  ( iLevel5 * xFibRange ) + xLLD   ;

var xFib1	= rnd( vFib1  , iDecimals); 
var xFib2	= rnd( vFib2  , iDecimals); 
var xFib3	= rnd( vFib3  , iDecimals); 
var xFib4	= rnd( vFib4  , iDecimals); 
var xFib5	= rnd( vFib5  , iDecimals); 



if ( isLastBarOnChart() == true ) { 

var vBar = getCurrentBarIndex() ;


var xStart = vBar - 400 ;

if (nDrawn == 0){

     addBand( xHHD, PS_SOLID, 1, iColorTop , "Fib100" )
     drawTextRelative(0, xHHD, xHHD, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "HHD")
     addBand( xFib5, PS_SOLID, 1, iColorFib , "Fib5"  )
     drawTextRelative(0, xFib5, xFib5, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "Fib5")
     addBand( xFib4, PS_SOLID, 1, iColorFib , "Fib4" ) 
     drawTextRelative(0, xFib4, xFib4, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "Fib4")
     addBand( xFib3, PS_SOLID, 1, iColorFib , "Fib3"  )
     drawTextRelative(0, xFib3, xFib3, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "Fib3")
     addBand( xFib2, PS_SOLID, 1, iColorFib , "Fib2"  )
     drawTextRelative(0, xFib2, xFib2, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "Fib2")
     addBand( xFib1, PS_SOLID, 1, iColorFib , "Fib1"  )
     drawTextRelative(0, xFib1, xFib1, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "Fib1")
     addBand( xLLD, PS_SOLID, 1, iColorBottom , "Fib000"  )
     drawTextRelative(0, xLLD, xLLD, Color.RGB(0,0,255), Color.RGB(192,192,192), Text.VCENTER, null, 14, "LLD")

//   addLineTool(LineTool.EXTENDED, vBar , iPrice, vBar, iPrice, 1, iColor , ""+vTag );

nDrawn++;

} // if nDrawn


return new Array( xHHD, xFib5 ,xFib4  ,xFib3,xFib2,xFib1, xLLD) ;

} // if last bar

}


function editParameters() {
    askForInput("TRO_Dynamic_FibsSR");
    return;
}

// rnd function - round to iDecimals places
function rnd(value, iDecimals ) {  

value =  value * Math.pow(10, iDecimals);

    return Math.round(value, iDecimals) / Math.pow(10, iDecimals);
}


